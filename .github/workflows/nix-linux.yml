name: nix-linux

on: [push, pull_request]

jobs:
  # tests:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v2
  #     - name: free disk space
  #       run: |
  #         sudo swapoff -a
  #         sudo rm -f /swapfile
  #         sudo apt -y purge ghc* cabal-install* php* || true
  #         sudo apt autoremove -y || true
  #         sudo apt autoclean -y || true
  #         docker rmi $(docker image ls -aq)
  #         df -h
  #     - uses: cachix/install-nix-action@v10
  #     - run: nix-env -iA cachix -f https://cachix.org/api/v1/install
  #     - run: cachix use hasktorch
  #     - run: cachix use iohk
  #     - run: |
  #         nix-build -j 2 -A haskellPackages.libtorch-ffi.checks.spec
  #         nix-build -j 2 -A haskellPackages.hasktorch.checks.spec
  #         nix-build -j 2 -A haskellPackages.examples.checks.spec
  build-cache:
    if: github.repository == 'hasktorch/hasktorch'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: free disk space
        run: |
          sudo swapoff -a
          sudo rm -f /swapfile
          sudo apt -y purge ghc* cabal-install* php* || true
          sudo apt autoremove -y || true
          sudo apt autoclean -y || true
          docker rmi $(docker image ls -aq)
          df -h
          cat /proc/cpuinfo
          cat /proc/meminfo
      - uses: cachix/install-nix-action@v13
        with:
          install_url: https://nixos-nix-install-tests.cachix.org/serve/i6laym9jw3wg9mw6ncyrk6gjx4l34vvx/install
          install_options: '--tarball-url-prefix https://nixos-nix-install-tests.cachix.org/serve'
          extra_nix_config: |
            experimental-features = nix-command flakes
          nix_path: nixpkgs=channel:nixos-unstable
      - uses: cachix/cachix-action@v8
        with:
          name: hasktorch
          signingKey: '${{ secrets.CACHIX_SIGNING_KEY }}'
      - run: |
          .github/workflows/setup-iohk-cache.sh
      - run: |
          ps -aux
          free
          export NIX_BUILD_CORES=1

          nix build '.#checks.x86_64-linux.libtorch-ffi:test:spec'

          nix build '.#checks.x86_64-linux.hasktorch:test:spec'
          # nix build '.#checks.x86_64-linux.hasktorch:test:doctests'

          nix build '.#checks.x86_64-linux.hasktorch-gradually-typed:test:spec'
          # nix build '.#checks.x86_64-linux.hasktorch-gradually-typed:test:doctests'

          nix build '.#checks.x86_64-linux.codegen:test:spec'
          # nix build '.#checks.x86_64-linux.codegen:test:doctests'

      - run: |
          ps -aux
          free
          export NIX_BUILD_CORES=1

          nix build '.#apps.x86_64-linux.bounding-box:exe:bounding-box'
          nix build '.#apps.x86_64-linux.codegen:exe:codegen-exe'
          nix build '.#apps.x86_64-linux.codegen:test:doctests'
          nix build '.#apps.x86_64-linux.codegen:test:spec'
          nix build '.#apps.x86_64-linux.dataloader-cifar10:exe:dataloader-cifar10'
          nix build '.#apps.x86_64-linux.examples:exe:alexNet'
          nix build '.#apps.x86_64-linux.examples:exe:autograd'
          nix build '.#apps.x86_64-linux.examples:exe:distill'
          nix build '.#apps.x86_64-linux.examples:exe:gaussian-process'
          nix build '.#apps.x86_64-linux.examples:exe:gd-field'
          nix build '.#apps.x86_64-linux.examples:exe:image-processing'
          nix build '.#apps.x86_64-linux.examples:exe:iris-classification'
          nix build '.#apps.x86_64-linux.examples:exe:load-torchscript'
          nix build '.#apps.x86_64-linux.examples:exe:matrix-factorization'
          nix build '.#apps.x86_64-linux.examples:exe:minimal-text-example'
          nix build '.#apps.x86_64-linux.examples:exe:mnist-mixed-precision'
          nix build '.#apps.x86_64-linux.examples:exe:mnist-mlp'
          nix build '.#apps.x86_64-linux.examples:exe:optimizers'
          nix build '.#apps.x86_64-linux.examples:exe:optimizers-cpp'
          nix build '.#apps.x86_64-linux.examples:exe:optimizers-cpp-typed'
          nix build '.#apps.x86_64-linux.examples:exe:regression'
          nix build '.#apps.x86_64-linux.examples:exe:regularization'
          nix build '.#apps.x86_64-linux.examples:exe:rnn'
          nix build '.#apps.x86_64-linux.examples:exe:serialization'
          nix build '.#apps.x86_64-linux.examples:exe:static-mnist-cnn'
          nix build '.#apps.x86_64-linux.examples:exe:static-mnist-mlp'
          nix build '.#apps.x86_64-linux.examples:exe:static-xor-mlp'
          nix build '.#apps.x86_64-linux.examples:exe:typed-transformer'
          nix build '.#apps.x86_64-linux.examples:exe:vae'
          nix build '.#apps.x86_64-linux.examples:exe:xor-mlp'
          nix build '.#apps.x86_64-linux.hasktorch-gradually-typed:exe:linear-regression'
          nix build '.#apps.x86_64-linux.hasktorch-gradually-typed:exe:neural-interpreter'
          nix build '.#apps.x86_64-linux.hasktorch-gradually-typed:exe:two-layer-network'
          nix build '.#apps.x86_64-linux.hasktorch-gradually-typed:test:doctests'
          nix build '.#apps.x86_64-linux.hasktorch-gradually-typed:test:spec'
          nix build '.#apps.x86_64-linux.hasktorch:test:doctests'
          nix build '.#apps.x86_64-linux.hasktorch:test:spec'
          nix build '.#apps.x86_64-linux.libtorch-ffi:test:spec'
          nix build '.#apps.x86_64-linux.untyped-nlp:exe:untyped-nlp'
